<!doctype html>

<body>
    <canvas id="gameCanvas" width="800" height="600">
    </canvas>
    <script>
        var canvas, canvasContext;

        window.onload = function() {
            canvas = document.getElementById('gameCanvas');
            canvasContext = canvas.getContext('2d');

            document.addEventListener("keydown", keyPressed);
            document.addEventListener("keyup", keyReleased);

            setInterval(mainloop, 1000 / 60);
        }

        //player variables
        var playerYpos = 200;
        const playerXpos = 50;
        const PLAYER_SIZE = 20;
        var playerYup = 5;
        var upKeypress = false;
        const UP_KEY = 38;

        var enemies = [];
        var totalEnemies = 3;
        var startingPos = true;

        //enemy obstacles variables
        const ENEMY_WIDTH = 20;
        const ENEMY_HEIGHT = 100;
        var enemyYpos = 300;
        var enemyXpos = 400;
        var enemyXspeed = -5;

        function mainloop() {
            colorRect(0, 0, canvas.width, canvas.height, 'black'); // bg
            colorRect(playerXpos, playerYpos, PLAYER_SIZE, PLAYER_SIZE, 'red'); // player

            playerMove();
            gravity();

            enemyMove();
            drawEnemy();
            hit();
            //drawImg();

            if (startingPos) {
                for (i = 0; i < totalEnemies; i++) {
                    makeEnemy();
                }
                startingPos = false;
            }
        }

        //player movement
        function playerMove() {
            if (upKeypress)
                playerYpos -= playerYup;
        } //end of func

        //player key movements
        function keyPressed(evt) {
            if (evt.keyCode == UP_KEY) {
                upKeypress = true;
            }

        }

        function keyReleased(evt) {
            if (evt.keyCode == UP_KEY) {
                upKeypress = false;
            }

        } //end of func

        //enemy movement func
        function enemyMove() {
            enemies.forEach(function(enemy) {

                enemy.enemyXpos += enemy.enemyXspeed;

                if (enemy.enemyXpos < -5) {
                    enemy.enemyXpos = 800;

                    var enemyPos = Math.floor(Math.random() * 3) + 1;
                    enemy.enemyYpos = Math.floor(Math.random() * (600 - 100) - 100);
                    enemy.enemyXspeed = Math.floor(Math.random() * (8 - 4) - 4);
                }

                // if (enemy.enemyXpos + enemy.ENEMY_WIDTH > playerXpos && enemy.enemyXpos < playerXpos + PLAYER_SIZE && //enemy.enemyYpos + enemy.ENEMY_WIDTH > playerYpos && enemy.enemyYpos < playerYpos + PLAYER_SIZE) {
                //console.log('stinky')
                // }
            });
        } //end of func

        function hit() {
            enemies.forEach(function(enemy, i, array) {
                if (enemy.enemyXpos + enemy.ENEMY_SIZE > playerXpos && enemy.enemyXpos < playerXpos + PLAYER_SIZE && enemy.enemyYpos + enemy.ENEMY_SIZE > playerYpos && enemy.enemyYpos < playerYpos + PLAYER_SIZE) {

                    location.reload();

                };
            });
        }

        function makeEnemy() {
            var enemyPos = Math.floor(Math.random() * 3) + 1;
            const ENEMY_WIDTH = 20;
            const ENEMY_HEIGHT = 250;
            var enemyYpos = enemyPos * (canvas.height / 3);
            var enemyXpos = 400;
            var enemyXspeed = -5;

            var enemy = {
                ENEMY_WIDTH: ENEMY_WIDTH,
                ENEMY_HEIGHT: ENEMY_HEIGHT,
                enemyYpos: enemyYpos,
                enemyXpos: enemyXpos,
                enemyXspeed: enemyXspeed,
            }

            enemies.push(enemy);
        }

        function drawEnemy() {
            enemies.forEach(function(enemy, i) {
                colorRect(enemy.enemyXpos, enemy.enemyYpos, enemy.ENEMY_WIDTH, enemy.ENEMY_HEIGHT, 'brown'); // enemy
            });
        }


        //playergravity variables
        var direction = 1;
        var velocity = 2;
        var fallingSpeed = 2;

        //playergravity
        function gravity() {
            playerYpos = playerYpos + (direction * velocity);
        }



        function colorRect(x, y, w, h, color) {
            canvasContext.fillStyle = color;
            canvasContext.fillRect(x, y, w, h);
        }

        // function drawImg(src, x, y, w, h) {
        //     canvasContext.drawImage(src, x, y, w, h);
        //}

    </script>
</body>
